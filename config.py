from models.unet import UNet
from models.resnet import ResNet
import torch.nn as nn


PATCH_SIZE = 16
LARGE_PATCH_SIZE = 96
PADDING = int((LARGE_PATCH_SIZE - PATCH_SIZE) // 2)


# ----Train Config-----#
TRAIN_MODEL = UNet()
LEARNING_RATE = 0.0001
TRAIN_BATCH_SIZE = 1
CRITERION = nn.BCELoss()
EPOCHS = 100
TRAIN_IMAGE_INITIAL_SIZE = 400
NUMBER_PATCH_PER_TRAIN_IMAGE = int((TRAIN_IMAGE_INITIAL_SIZE // PATCH_SIZE) ** 2)
TRAIN_DATASET_DIR = "./Datasets/training"
TRAIN_CHECKPOINTS_DIR = "./checkpoints"
SAVE_MODEL_EVERY_X_EPOCH = 5


#----Test Config-----#
TEST_MODEL = UNet()
TEST_BATCH_SIZE = 1
TEST_IMAGE_SIZE = 608
NUMBER_PATCH_PER_TEST_IMAGE = int((TEST_IMAGE_SIZE // PATCH_SIZE) ** 2)
MASK_THRESHOLD = 0.5
TEST_MODEL_WEIGHTS = None  # None for now
TEST_DATASET_DIR = "./Datasets/test_set_images"
